import{d as h,h as p,C as c,I as C,ah as v,c as f,o as z,K as T,al as _,O as E,b as x,t as N,D as S,y as s}from"./index-9qw2s-IO.js";import{s as u}from"./useGraphWithCanvas-7NYPERqo.js";const I=h({__name:"GNode",props:{size:{default:60},node:{}},setup(r){const o=r,e=p(u(c.value.getTheme,o.node)),l=C(()=>Math.round(Math.max(1,Math.log(o.size)))),t=()=>{c.value.focus.set([o.node.id])},d=setInterval(()=>{e.value=u(c.value.getTheme,o.node)},100);return v(()=>{clearInterval(d)}),(n,a)=>(z(),f("div",{onClick:t,class:_(["flex","font-bold","items-center","justify-center","rounded-full","cursor-pointer"]),style:T({color:e.value.nodeTextColor,border:`${l.value}px solid ${e.value.nodeBorderColor}`,backgroundColor:e.value.nodeColor,height:`${n.size}px`,width:`${n.size}px`})},[E(n.$slots,"default",{},()=>[x(N(e.value.nodeText),1)])],4))}}),g="scc-colorizer",m=[s.RED_500,s.BLUE_500,s.GREEN_500,s.YELLOW_500,s.PURPLE_500,s.ORANGE_500],L=(r,o=g)=>{const{setTheme:e,removeAllThemes:l}=S(r,o),t=a=>{if(r.focus.isFocused(a.id))return;const i=r.characteristics.nodeIdToConnectedComponent.value.get(a.id);if(i!==void 0)return m[i%m.length]};return{colorize:()=>{e("nodeBorderColor",t),e("nodeAnchorColor",t)},decolorize:()=>{l()}}};export{I as _,L as u};
